version: "3"

services:
  postgres:
    restart: always
    image: postgres:15.2
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "log_statement=${POSTGRES_LOG_LEVEL:-none}"]
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASS
      POSTGRES_HOST: $DB_HOST
      POSTGRES_PORT: $DB_PORT
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASS}
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data

  backend:
    build:
      context: .
      dockerfile: config/backend.Dockerfile
    depends_on:
      - redis
      - postgres
    volumes:
      - ./backend:/backend
      - static_volume:/backend/static_root
    ports:
      - 8000:8000
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: config/backend.Dockerfile
    command: "celery -A api.asgi.celery worker -l INFO"
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  flower:
    image: mher/flower
    env_file:
      - .env
    ports:
      - 8888:8888
    depends_on:
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: config/backend.Dockerfile
    command: "celery -A api.asgi.celery beat -S redbeat.RedBeatScheduler --max-interval 30 -l INFO"
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  frontend:
    build:
      context: .
      dockerfile: config/frontend.Dockerfile
    container_name: stats_frontend
    depends_on:
      - backend
    ports:
      - 4200:4200
    volumes:
      - ./frontend:/frontend  

volumes:
  static_volume:
  postgres-data:
  redis-data:
