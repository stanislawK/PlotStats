"""init

Revision ID: efbeab290ccc
Revises: 
Create Date: 2023-05-12 06:22:31.877099

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "efbeab290ccc"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_category_name"), "category", ["name"], unique=False)
    op.create_table(
        "estate",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("street", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("province", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_estate_city"), "estate", ["city"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "search",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("distance_radius", sa.Integer(), nullable=False),
        sa.Column("coordinates", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("from_price", sa.Integer(), nullable=True),
        sa.Column("to_price", sa.Integer(), nullable=True),
        sa.Column("from_surface", sa.Integer(), nullable=True),
        sa.Column("to_surface", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_search_location"), "search", ["location"], unique=False)
    op.create_table(
        "searchevent",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("search_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["search_id"],
            ["search.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "searchuser",
        sa.Column("search_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["search_id"],
            ["search.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("search_id", "user_id"),
    )
    op.create_table(
        "price",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("price_per_square_meter", sa.Integer(), nullable=True),
        sa.Column("area_in_square_meters", sa.Integer(), nullable=True),
        sa.Column("terrain_area_in_square_meters", sa.Integer(), nullable=True),
        sa.Column("estate_id", sa.Integer(), nullable=True),
        sa.Column("search_event_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["estate_id"],
            ["estate.id"],
        ),
        sa.ForeignKeyConstraint(
            ["search_event_id"],
            ["searchevent.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "searcheventestate",
        sa.Column("search_event_id", sa.Integer(), nullable=False),
        sa.Column("estate_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["estate_id"],
            ["estate.id"],
        ),
        sa.ForeignKeyConstraint(
            ["search_event_id"],
            ["searchevent.id"],
        ),
        sa.PrimaryKeyConstraint("search_event_id", "estate_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("searcheventestate")
    op.drop_table("price")
    op.drop_table("searchuser")
    op.drop_table("searchevent")
    op.drop_index(op.f("ix_search_location"), table_name="search")
    op.drop_table("search")
    op.drop_table("user")
    op.drop_index(op.f("ix_estate_city"), table_name="estate")
    op.drop_table("estate")
    op.drop_index(op.f("ix_category_name"), table_name="category")
    op.drop_table("category")
    # ### end Alembic commands ###
